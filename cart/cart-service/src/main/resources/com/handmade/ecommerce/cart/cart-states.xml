<?xml version="1.0" encoding="UTF-8"?>
<!-- An example states xml file that demonstrates the following features:
 1. The progression of Cart from OPENED to CLOSED 
 2. How to define and use a custom DSL to define the workflow.
     This also demonstrates how to attach security permissions (not roles) to a state event so that
     these perms would be checked before the action is allowed.
-->
<states>
	<default-transition-action componentName="cartBaseTransitionAction"/>
    <add-state-tag tag="status" manualState="true"/>
    <add-transition-tag tag="on-action" eventIdTag="id" newStateIdTag="move-to"/>

	<flow id='CartFlow' default='true'>
		<entry-action componentName="cartEntryAction"/>
		<exit-action componentName="cartExitAction"/>
        <security-strategy componentName="stmSecurityStrategy"/>
		<status id='ACTIVE' initialState='true'>
			<on-action id='convert' move-to='CONVERTED_TO_ORDER'/>
			<on-action id='abandon' move-to='ABANDONED'/>
			<on-action id='expire' move-to='EXPIRED'/>
            <on-action id='addItem' action-component="addItemToCartCommand"/>
            <on-action id='updateItem' action-component="updateCartItemCommand"/>
            <on-action id='removeItem' action-component="removeItemFromCartCommand"/>
            <on-action id='clearCart' action-component="clearCartCommand"/>
		</status>

		<status id='CONVERTED_TO_ORDER'>
			<!-- No transitions allowed from this state -->
            <on-action id='getOrderDetails' action-component="getOrderDetailsCommand"/>
		</status>

		<status id='ABANDONED'>
			<!-- No transitions allowed from this state -->
            <on-action id='restore' action-component="restoreCartCommand"/>
		</status>

		<status id='EXPIRED'>
			<!-- No transitions allowed from this state -->
            <on-action id='restore' action-component="restoreCartCommand"/>
		</status>
	</flow>
	
</states>
